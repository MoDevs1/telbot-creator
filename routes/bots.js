const express = require("express")
const router = express.Router()
const Bot = require("../models/Bot")
const User = require("../models/User")
const { encrypt, decrypt } = require("../utils/encryption")
const sendEmail = require("../utils/sendEmail")

// Middleware ููุชุญูู ูู ุชุณุฌูู ุงูุฏุฎูู
function ensureAuthenticated(req, res, next) {
  if (req.isAuthenticated && req.isAuthenticated()) {
    return next()
  }
  return res.status(401).json({ message: "โ ุบูุฑ ูุตุฑุญ" })
}

// ุฅูุดุงุก ุจูุช ุฌุฏูุฏ
router.post("/create-bot", ensureAuthenticated, async (req, res) => {
  try {
    const { name, description, platform, token } = req.body

    // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงููุทููุจุฉ
    if (!name || !description || !platform || !token) {
      return res.status(400).json({ message: "โ ุฌููุน ุงูุญููู ูุทููุจุฉ" })
    }

    // ุชุดููุฑ ุงูุชูููู
    const encryptedToken = encrypt(token)

    // ุฅูุดุงุก ุงูุจูุช
    const newBot = new Bot({
      name,
      description,
      platform,
      token: encryptedToken,
      ownerId: req.user.id,
      ownerEmail: req.user.email,
      status: "pending",
    })

    const savedBot = await newBot.save()

    // ุงูุญุตูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู
    const user = await User.findById(req.user.id)
    const ownerEmail = decrypt(req.user.email)

    // ุฅุฑุณุงู ุฅูููู ููุฃุฏูู ููููุงููุฉ
    await sendEmail({
      to: process.env.ADMIN_EMAIL,
      subject: `๐ค ุทูุจ ููุงููุฉ ุนูู ุจูุช ุฌุฏูุฏ: ${name}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #4f46e5;">ุทูุจ ููุงููุฉ ุนูู ุจูุช ุฌุฏูุฏ ๐ค</h2>
          
          <div style="background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>ุชูุงุตูู ุงูุจูุช:</h3>
            <p><strong>ุงุณู ุงูุจูุช:</strong> ${name}</p>
            <p><strong>ุงููุตู:</strong> ${description}</p>
            <p><strong>ุงูููุตุฉ:</strong> ${platform}</p>
            <p><strong>ุงูุชูููู:</strong> ${token.substring(0, 10)}...</p>
          </div>

          <div style="background: #eff6ff; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3>ูุนูููุงุช ุงููุงูู:</h3>
            <p><strong>ุงูุงุณู:</strong> ${user.firstName} ${user.lastName}</p>
            <p><strong>ุงูุจุฑูุฏ:</strong> ${ownerEmail}</p>
            <p><strong>ุงูุฎุทุฉ:</strong> ${user.plan === "pro" ? "ุงููุชูุฏูุฉ" : "ุงููุฌุงููุฉ"}</p>
            <p><strong>ุฑูู ุงููุงุชู:</strong> ${user.phone ? decrypt(user.phone) : "ุบูุฑ ูุญุฏุฏ"}</p>
          </div>

          <div style="text-align: center; margin: 30px 0;">
            <a href="http://localhost:${process.env.Port || 3000}/admin/approve-bot/${savedBot._id}" 
               style="display: inline-block; padding: 12px 24px; background: #10b981; color: white; text-decoration: none; border-radius: 6px; margin: 0 10px;">
              โ ูุจูู ุงูุจูุช
            </a>
            <a href="http://localhost:${process.env.Port || 3000}/admin/reject-bot/${savedBot._id}" 
               style="display: inline-block; padding: 12px 24px; background: #ef4444; color: white; text-decoration: none; border-radius: 6px; margin: 0 10px;">
              โ ุฑูุถ ุงูุจูุช
            </a>
          </div>

          <p style="color: #6B7280; font-size: 14px;">ุชู ุฅุฑุณุงู ูุฐุง ุงูุทูุจ ุชููุงุฆูุงู ูู ููุตุฉ TeleBot Creator</p>
        </div>
      `,
    })

    // ุฅุฑุณุงู ุฅูููู ุชุฃููุฏ ูููุณุชุฎุฏู
    await sendEmail({
      to: ownerEmail,
      subject: "๐ฉ ุชู ุงุณุชูุงู ุทูุจ ุฅูุดุงุก ุงูุจูุช - TeleBot Creator",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #4f46e5;">ุชู ุงุณุชูุงู ุทูุจู ุจูุฌุงุญ! ๐ฉ</h2>
          <p>ุดูุฑุงู ูู ุนูู ุงุณุชุฎุฏุงู TeleBot Creator. ุชู ุงุณุชูุงู ุทูุจ ุฅูุดุงุก ุงูุจูุช ุงูุฎุงุต ุจู.</p>
          
          <div style="background: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #10b981;">
            <h3>ุชูุงุตูู ุงูุจูุช ุงููุฑุณู:</h3>
            <p><strong>ุงุณู ุงูุจูุช:</strong> ${name}</p>
            <p><strong>ุงูููุตุฉ:</strong> ${platform}</p>
            <p><strong>ุงูุญุงูุฉ:</strong> ููุฏ ุงููุฑุงุฌุนุฉ โณ</p>
          </div>

          <div style="background: #eff6ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #3b82f6;">
            <h3>ูุงุฐุง ูุญุฏุซ ุงูุขูุ</h3>
            <ul style="margin: 10px 0; padding-right: 20px;">
              <li>ุณูุชู ูุฑุงุฌุนุฉ ุงูุจูุช ูู ูุจู ูุฑูููุง</li>
              <li>ุณูุชุญูู ูู ุตุญุฉ ุงูุชูููู ูุงููุนูููุงุช</li>
              <li>ุณุชุชููู ุฅุดุนุงุฑุงู ุจุงูููุงููุฉ ุฃู ุงูุฑูุถ ุฎูุงู 24 ุณุงุนุฉ</li>
              <li>ูู ุญุงูุฉ ุงูููุงููุฉุ ุณุชุญุตู ุนูู ูุนูููุงุช ุงูุชูุงุตู ููุจุฑูุฌุฉ</li>
            </ul>
          </div>

          <p>ููููู ูุชุงุจุนุฉ ุญุงูุฉ ุงูุจูุช ูู ููุญุฉ ุงูุชุญูู ุงูุฎุงุตุฉ ุจู.</p>
          <a href="http://localhost:${process.env.Port || 3000}/bot-creator.html" 
             style="display: inline-block; padding: 12px 24px; background: #4f46e5; color: white; text-decoration: none; border-radius: 6px; margin: 10px 0;">
            ุงูุฐูุงุจ ุฅูู ููุญุฉ ุงูุชุญูู
          </a>
          
          <p style="color: #6B7280;">ุดูุฑูุง ูุซูุชู ูู TeleBot Creator โค๏ธ</p>
        </div>
      `,
    })

    res.status(201).json({
      message: "โ ุชู ุฅูุดุงุก ุงูุจูุช ุจูุฌุงุญ ูุฅุฑุณุงูู ูููุฑุงุฌุนุฉ",
      bot: {
        id: savedBot._id,
        name: savedBot.name,
        status: savedBot.status,
      },
    })
  } catch (error) {
    console.error("โ Bot Creation Error:", error)
    res.status(500).json({ message: "โ ุญุฏุซ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุจูุช" })
  }
})

// ุฌูุจ ุงูุจูุชุงุช ุงูุฎุงุตุฉ ุจุงููุณุชุฎุฏู
router.get("/my-bots", ensureAuthenticated, async (req, res) => {
  try {
    const bots = await Bot.find({ ownerId: req.user.id }).select("-token").sort({ createdAt: -1 })

    res.json(bots)
  } catch (error) {
    console.error("โ Error fetching bots:", error)
    res.status(500).json({ message: "โ ุญุฏุซ ุฎุทุฃ ูู ุฌูุจ ุงูุจูุชุงุช" })
  }
})

// ุฌูุจ ุชูุงุตูู ุจูุช ูุญุฏุฏ
router.get("/bot/:id", ensureAuthenticated, async (req, res) => {
  try {
    const bot = await Bot.findOne({ _id: req.params.id, ownerId: req.user.id }).select("-token")

    if (!bot) {
      return res.status(404).json({ message: "โ ุงูุจูุช ุบูุฑ ููุฌูุฏ" })
    }

    res.json(bot)
  } catch (error) {
    console.error("โ Error fetching bot:", error)
    res.status(500).json({ message: "โ ุญุฏุซ ุฎุทุฃ ูู ุฌูุจ ุงูุจูุช" })
  }
})

// ุชุญุฏูุซ ุจูุช
router.put("/bot/:id", ensureAuthenticated, async (req, res) => {
  try {
    const { name, description } = req.body
    const bot = await Bot.findOne({ _id: req.params.id, ownerId: req.user.id })

    if (!bot) {
      return res.status(404).json({ message: "โ ุงูุจูุช ุบูุฑ ููุฌูุฏ" })
    }

    // ูููู ุชุญุฏูุซ ุงูุงุณู ูุงููุตู ููุท
    if (name) bot.name = name
    if (description) bot.description = description

    await bot.save()

    res.json({ message: "โ ุชู ุชุญุฏูุซ ุงูุจูุช ุจูุฌุงุญ" })
  } catch (error) {
    console.error("โ Error updating bot:", error)
    res.status(500).json({ message: "โ ุญุฏุซ ุฎุทุฃ ูู ุชุญุฏูุซ ุงูุจูุช" })
  }
})

// ุญุฐู ุจูุช
router.delete("/bot/:id", ensureAuthenticated, async (req, res) => {
  try {
    const bot = await Bot.findOne({ _id: req.params.id, ownerId: req.user.id })

    if (!bot) {
      return res.status(404).json({ message: "โ ุงูุจูุช ุบูุฑ ููุฌูุฏ" })
    }

    await Bot.findByIdAndDelete(req.params.id)

    res.json({ message: "โ ุชู ุญุฐู ุงูุจูุช ุจูุฌุงุญ" })
  } catch (error) {
    console.error("โ Error deleting bot:", error)
    res.status(500).json({ message: "โ ุญุฏุซ ุฎุทุฃ ูู ุญุฐู ุงูุจูุช" })
  }
})

module.exports = router
